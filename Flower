-- Создание базы данных для цветочного заказа
CREATE DATABASE FlowerShop;

-- Использование базы данных FlowerShop
USE FlowerShop;




-- Создание таблицы Customer
CREATE TABLE Customer (
  id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  name VARCHAR(50) NOT NULL,
  phone VARCHAR(20) NOT NULL CHECK (phone LIKE '___-___-____') UNIQUE,
  address VARCHAR(100),
  email VARCHAR(50) CHECK (email LIKE '%_@__%.__%') UNIQUE,
  age INT CHECK (age < 100)
);

-- Вставка данных в таблицу Customer
INSERT INTO Customer (name, phone, address, email, age)
VALUES 
('Kate', '999-987-6543', 'Frunze 55', 'kate@mail.ru', 24),
('Anna', '989-567-1234', 'Petrovskaya 23', 'anna@mail.ru', 22),
('Petya', '997-412-2443', 'Bulvarnaya 77', 'petay@bk.com', 37);


-- Создание таблицы Supplier
CREATE TABLE Supplier (
  id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  name VARCHAR(50) NOT NULL,
  phone VARCHAR(20) NOT NULL CHECK (phone LIKE '___-___-____'),
  email VARCHAR(50) CHECK (email LIKE '%_@__%.__%')
);

-- Вставка данных в таблицу Supplier
INSERT INTO Supplier (name, phone, email)
VALUES 
('OOO Romashka', '901-313-1238', 'romashka@gmail.com'),
('OAO Karenchik', '977-987-6543', 'karen@mail.ru'),
('AAA Monstera', '999-691-3434', 'monstera@yandex.ru');

-- Создание таблицы Product_Type
CREATE TABLE Product_Type (
  id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  name VARCHAR(50) NOT NULL
);

-- Вставка данных в таблицу Product_Type
INSERT INTO Product_Type (name)
VALUES 
('candle'),
('plants'),
('flowers');

-- Создание таблицы Product
CREATE TABLE Product (
  id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  name VARCHAR(50) NOT NULL,
  price DECIMAL(8, 2) NOT NULL,
  counts INT DEFAULT 0,
  type_id INT NOT NULL, FOREIGN KEY (type_id) REFERENCES Product_Type (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  supplier_id INT NOT NULL, FOREIGN KEY (supplier_id) REFERENCES Supplier (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE
);

-- Вставка данных в таблицу Product
INSERT INTO Product (name, price, type_id, supplier_id, counts)
VALUES 
('Red Roses', 160, 3, 1,  10),
('Pink Lilies', 100, 3, 2, 3),
('Yellow Tulips', 120, 3, 2, 7),
('Shea butter manoi flowers', 450.00, 1, 3, 15);

-- Создание таблицы Delivery
CREATE TABLE Delivery (
  id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  customer_id INT NOT NULL FOREIGN KEY (customer_id) REFERENCES Customer (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  product_id INT NOT NULL, FOREIGN KEY (product_id) REFERENCES Product (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  delivery_date DATETIME NOT NULL,
  delivery_address VARCHAR(100) NOT NULL
);

-- Вставка данных в таблицу Delivery
INSERT INTO Delivery (customer_id, product_id, delivery_date, delivery_address)
VALUES 
(1, 2, '03-17-2023 18:00:00', 'Pervaya 6'),
(2, 3, '03-11-2023 16:30:00', 'Vtoraya 1');

-- Создание таблицы Discount
CREATE TABLE Discount(
  id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  customer_id INT NOT NULL FOREIGN KEY (customer_id) REFERENCES Customer (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  amount INT NOT NULL DEFAULT 0
);

-- Вставка данных в таблицу Discount
INSERT INTO Discount (customer_id, amount)
VALUES 
(1,10),
(2, 5);


-- Создание таблицы Orders
CREATE TABLE Orders (
    id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    customer_id INT NOT NULL FOREIGN KEY (customer_id) REFERENCES Customer (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
    product_id INT NOT NULL FOREIGN KEY (product_id) REFERENCES Product (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
    order_date DATETIME NOT NULL,
    total_amount DECIMAL(10, 2),
    discount_id INT NOT NULL FOREIGN KEY (discount_id) REFERENCES Discount (id)
  -- ON DELETE CASCADE
  -- ON UPDATE CASCADE
);


INSERT INTO Orders (customer_id, product_id, order_date, total_amount, discount_id)
VALUES 
(1, 3, '03-17-2023 15:00:00', 570.00, 1),
(2, 2, '03-11-2023 22:21:00', 10000.50, 2);






-- Вывести ВСЕХ клиентов с доставками и товаром которые они заказали
SELECT c.name, c.phone, d.delivery_date, d.delivery_address, p.name
FROM customer as c
LEFT JOIN delivery as d
ON c.id = d.customer_id
LEFT JOIN product as p
ON p.id = d.product_id

-- Вывести клинтов у которых нет доставки
SELECT c.name, d.delivery_address, d.delivery_date
FROM customer as c
LEFT JOIN Delivery as d
ON c.id = d.customer_id
WHERE delivery_date is null 
